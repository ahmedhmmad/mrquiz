{
 "Resources": {
  "newUploadedFile2AB9B21E": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:cr-owned:eef8bb98",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    },
    "WebsiteConfiguration": {
     "ErrorDocument": "index.html",
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/newUploadedFile/Resource"
   }
  },
  "TextractRoleA0CE91FA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonTextractFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/TextractRole/Resource"
   }
  },
  "TextractRoleDefaultPolicyD4FA1BCA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "newUploadedFile2AB9B21E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "newUploadedFile2AB9B21E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractRoleDefaultPolicyD4FA1BCA",
    "Roles": [
     {
      "Ref": "TextractRoleA0CE91FA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/TextractRole/DefaultPolicy/Resource"
   }
  },
  "uploadFileFunctionServiceRole8162019C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/uploadFileFunction/ServiceRole/Resource"
   }
  },
  "uploadFileFunctionServiceRoleDefaultPolicy5D61DCA6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "newUploadedFile2AB9B21E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "newUploadedFile2AB9B21E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "uploadFileFunctionServiceRoleDefaultPolicy5D61DCA6",
    "Roles": [
     {
      "Ref": "uploadFileFunctionServiceRole8162019C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/uploadFileFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "uploadFileFunction2DAC78E7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d4d18b5c6ae728a102ef1616fee7aadf4c854b1392b1a975799a3aa6f44e456b.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "newUploadedFile2AB9B21E"
      }
     }
    },
    "Handler": "handlers/uploadFile.handler",
    "Role": {
     "Fn::GetAtt": [
      "uploadFileFunctionServiceRole8162019C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "uploadFileFunctionServiceRoleDefaultPolicy5D61DCA6",
    "uploadFileFunctionServiceRole8162019C"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/uploadFileFunction/Resource",
    "aws:asset:path": "asset.d4d18b5c6ae728a102ef1616fee7aadf4c854b1392b1a975799a3aa6f44e456b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "listFilesFunctionServiceRole82F10D4F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/listFilesFunction/ServiceRole/Resource"
   }
  },
  "listFilesFunctionServiceRoleDefaultPolicy4143CF85": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "newUploadedFile2AB9B21E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "newUploadedFile2AB9B21E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "listFilesFunctionServiceRoleDefaultPolicy4143CF85",
    "Roles": [
     {
      "Ref": "listFilesFunctionServiceRole82F10D4F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/listFilesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "listFilesFunctionF3DCEA9F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d4d18b5c6ae728a102ef1616fee7aadf4c854b1392b1a975799a3aa6f44e456b.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "newUploadedFile2AB9B21E"
      }
     }
    },
    "Handler": "handlers/listFiles.handler",
    "Role": {
     "Fn::GetAtt": [
      "listFilesFunctionServiceRole82F10D4F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "listFilesFunctionServiceRoleDefaultPolicy4143CF85",
    "listFilesFunctionServiceRole82F10D4F"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/listFilesFunction/Resource",
    "aws:asset:path": "asset.d4d18b5c6ae728a102ef1616fee7aadf4c854b1392b1a975799a3aa6f44e456b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TextractFunction6DF7C8EE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d4d18b5c6ae728a102ef1616fee7aadf4c854b1392b1a975799a3aa6f44e456b.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "newUploadedFile2AB9B21E"
      }
     }
    },
    "Handler": "handlers/textractFile.handler",
    "Role": {
     "Fn::GetAtt": [
      "TextractRoleA0CE91FA",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "TextractRoleDefaultPolicyD4FA1BCA",
    "TextractRoleA0CE91FA"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/TextractFunction/Resource",
    "aws:asset:path": "asset.d4d18b5c6ae728a102ef1616fee7aadf4c854b1392b1a975799a3aa6f44e456b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "extractTextApi690A7E22": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Quiz Generator Service"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Resource"
   }
  },
  "extractTextApiDeploymentA10057546680db05a06b57c5ce94065239bbb422": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "DependsOn": [
    "extractTextApilistFilesGET12B19D24",
    "extractTextApilistFilesOPTIONSBD0B6ED0",
    "extractTextApilistFiles86BEB786",
    "extractTextApiOPTIONSFCF78814",
    "extractTextApiPOSTE872A561",
    "extractTextApitextRactOPTIONS93B08D7D",
    "extractTextApitextRactPOST164BEECB",
    "extractTextApitextRactF70F3D9D"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Deployment/Resource"
   }
  },
  "extractTextApiDeploymentStageprod1EA8B155": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "extractTextApiDeploymentA10057546680db05a06b57c5ce94065239bbb422"
    },
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/DeploymentStage.prod/Resource"
   }
  },
  "extractTextApiOPTIONSFCF78814": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "extractTextApi690A7E22",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/OPTIONS/Resource"
   }
  },
  "extractTextApiPOSTApiPermissionInfrastructureStackextractTextApiDA4FB8E6POST7F195EFF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "uploadFileFunction2DAC78E7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "extractTextApi690A7E22"
       },
       "/",
       {
        "Ref": "extractTextApiDeploymentStageprod1EA8B155"
       },
       "/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/POST/ApiPermission.InfrastructureStackextractTextApiDA4FB8E6.POST.."
   }
  },
  "extractTextApiPOSTApiPermissionTestInfrastructureStackextractTextApiDA4FB8E6POST240E0F93": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "uploadFileFunction2DAC78E7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "extractTextApi690A7E22"
       },
       "/test-invoke-stage/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/POST/ApiPermission.Test.InfrastructureStackextractTextApiDA4FB8E6.POST.."
   }
  },
  "extractTextApiPOSTE872A561": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "uploadFileFunction2DAC78E7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "extractTextApi690A7E22",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/POST/Resource"
   }
  },
  "extractTextApilistFiles86BEB786": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "extractTextApi690A7E22",
      "RootResourceId"
     ]
    },
    "PathPart": "listFiles",
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/listFiles/Resource"
   }
  },
  "extractTextApilistFilesOPTIONSBD0B6ED0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "extractTextApilistFiles86BEB786"
    },
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/listFiles/OPTIONS/Resource"
   }
  },
  "extractTextApilistFilesGETApiPermissionInfrastructureStackextractTextApiDA4FB8E6GETlistFilesEFE5EDDD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "listFilesFunctionF3DCEA9F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "extractTextApi690A7E22"
       },
       "/",
       {
        "Ref": "extractTextApiDeploymentStageprod1EA8B155"
       },
       "/GET/listFiles"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/listFiles/GET/ApiPermission.InfrastructureStackextractTextApiDA4FB8E6.GET..listFiles"
   }
  },
  "extractTextApilistFilesGETApiPermissionTestInfrastructureStackextractTextApiDA4FB8E6GETlistFilesAFD74FAF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "listFilesFunctionF3DCEA9F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "extractTextApi690A7E22"
       },
       "/test-invoke-stage/GET/listFiles"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/listFiles/GET/ApiPermission.Test.InfrastructureStackextractTextApiDA4FB8E6.GET..listFiles"
   }
  },
  "extractTextApilistFilesGET12B19D24": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "listFilesFunctionF3DCEA9F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "extractTextApilistFiles86BEB786"
    },
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/listFiles/GET/Resource"
   }
  },
  "extractTextApitextRactF70F3D9D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "extractTextApi690A7E22",
      "RootResourceId"
     ]
    },
    "PathPart": "textRact",
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/textRact/Resource"
   }
  },
  "extractTextApitextRactOPTIONS93B08D7D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "extractTextApitextRactF70F3D9D"
    },
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/textRact/OPTIONS/Resource"
   }
  },
  "extractTextApitextRactPOSTApiPermissionInfrastructureStackextractTextApiDA4FB8E6POSTtextRactD44635B8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TextractFunction6DF7C8EE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "extractTextApi690A7E22"
       },
       "/",
       {
        "Ref": "extractTextApiDeploymentStageprod1EA8B155"
       },
       "/POST/textRact"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/textRact/POST/ApiPermission.InfrastructureStackextractTextApiDA4FB8E6.POST..textRact"
   }
  },
  "extractTextApitextRactPOSTApiPermissionTestInfrastructureStackextractTextApiDA4FB8E6POSTtextRactC383874A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TextractFunction6DF7C8EE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "extractTextApi690A7E22"
       },
       "/test-invoke-stage/POST/textRact"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/textRact/POST/ApiPermission.Test.InfrastructureStackextractTextApiDA4FB8E6.POST..textRact"
   }
  },
  "extractTextApitextRactPOST164BEECB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TextractFunction6DF7C8EE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "extractTextApitextRactF70F3D9D"
    },
    "RestApiId": {
     "Ref": "extractTextApi690A7E22"
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/extractTextApi/Default/textRact/POST/Resource"
   }
  },
  "DeployWebsiteAwsCliLayer17DBC421": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/DeployWebsite/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeployWebsiteCustomResourceD116527B": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "ef97a152b24a79192f09a791a43016b9ff0a5cf655d259b52bab93e523242c37.zip"
    ],
    "DestinationBucketName": {
     "Ref": "newUploadedFile2AB9B21E"
    },
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/DeployWebsite/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "newUploadedFile2AB9B21E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "newUploadedFile2AB9B21E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeployWebsiteAwsCliLayer17DBC421"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QQU/DMAyFf8vumWEdEuetiBOIqZO4Vl5qirc0qeqEqor631Hasu3A6X3Pz7JsZ7B5eobNCntZ6+qyNnyCePSoLwp7KaNsIe6DvpBX+ZddaJY9Co2KsYFYOEMpn/TgDOsh2ZlGZbA5VQjxNVjt2dmU3fOBuoZFFveGA3Wf1E3+yLY25N21f1SyLSOKkBfYJVEVtcYNDVkP82Yv18KosOUaPfU4QCxI/K7ladMFb62peueOHuvpphkKEhc6Telo9U7+21UpXOgvXSZPPI638rRnGsS2Tj0fwbfBL38pTTq4xF60Ydj1khuefqDyIN41/w1PnDtb8fwS6yqCszz8ZBls4XF1FuZ1F6znhqCY9Rcqamy86gEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "InfrastructureStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "extractTextApiEndpointAB0A1612": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "extractTextApi690A7E22"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "extractTextApiDeploymentStageprod1EA8B155"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}